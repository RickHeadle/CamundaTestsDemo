<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>ru.rickheadle.welldungeons</groupId>
  <artifactId>CamundaTestsDemo</artifactId>
  <version>1.0-SNAPSHOT</version>

  <packaging>war</packaging>

  <name>Camunda BPM Process Application</name>
  <description>A Process Application for [Camunda BPM](http://docs.camunda.org). [The project has been generated by the Maven archetype 'camunda-archetype-demo-7.11.1']</description>

  <properties>
    <camunda.version>7.21.0-alpha5</camunda.version>
    <!--
    Adjust if you want to use Camunda Community Edition (CE):
    <camunda.version>7.11.0</camunda.version>
    Make sure you also switch to the CE webapp dependency
    and CE repository below
    -->
    <cxf.version>3.2.7</cxf.version>
<!--    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>-->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <failOnMissingWebXml>false</failOnMissingWebXml>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- https://mvnrepository.com/artifact/org.camunda.bpm/camunda-bom -->
      <dependency>
        <groupId>org.camunda.bpm</groupId>
        <artifactId>camunda-bom</artifactId>
        <version>${camunda.version}</version>
        <type>pom</type>
        <scope>test</scope>
      </dependency>
      <!-- DMN BOM only needed for using the DMN engine standalone -->
      <!-- https://mvnrepository.com/artifact/org.camunda.bpm.dmn/camunda-engine-dmn-bom -->
      <dependency>
        <groupId>org.camunda.bpm.dmn</groupId>
        <artifactId>camunda-engine-dmn-bom</artifactId>
        <version>${camunda.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- process engine, needs to be 'provided' because it's already a shared library in the container -->
    <!-- https://mvnrepository.com/artifact/org.camunda.bpm/camunda-engine -->
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <version>${camunda.version}</version>
      <scope>provided</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.camunda.bpm/camunda-engine-spring -->
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-spring</artifactId>
      <version>${camunda.version}</version>
    </dependency>
    <!-- decision engine, only needed for using the DMN engine standalone -->
    <!-- https://mvnrepository.com/artifact/org.camunda.bpm.dmn/camunda-engine-dmn -->
    <dependency>
      <groupId>org.camunda.bpm.dmn</groupId>
      <artifactId>camunda-engine-dmn</artifactId>
      <version>${camunda.version}</version>
    </dependency>

<!--    <dependency>
      &lt;!&ndash; AssertJ Testing Library &ndash;&gt;
      <groupId>org.camunda.bpm.extension</groupId>
      <artifactId>camunda-bpm-assert</artifactId>
      <version>1.2</version>
      <scope>test</scope>
    </dependency>-->
    <!-- https://mvnrepository.com/artifact/org.camunda.bpm/camunda-bpm-assert -->
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-bpm-assert</artifactId>
      <version>${camunda.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.camunda.bpm.assert/camunda-bpm-assert -->
    <dependency>
      <groupId>org.camunda.bpm.assert</groupId>
      <artifactId>camunda-bpm-assert</artifactId>
      <version>15.0.0</version>
      <scope>test</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.assertj/assertj-core -->
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.25.3</version>
      <scope>test</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.camunda.bpm.extension/camunda-bpm-assert -->
    <dependency>
      <groupId>org.camunda.bpm.extension</groupId>
      <artifactId>camunda-bpm-assert</artifactId>
      <version>2.0-alpha2</version>
      <scope>test</scope>
    </dependency>

    <!-- Required to use Spin dataformat support in unit tests -->
    <!-- https://mvnrepository.com/artifact/org.camunda.spin/camunda-spin-dataformat-all -->
    <dependency>
      <groupId>org.camunda.spin</groupId>
      <artifactId>camunda-spin-dataformat-all</artifactId>
      <version>1.23.0</version>
      <scope>test</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.camunda.bpm/camunda-engine-plugin-spin -->
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-plugin-spin</artifactId>
      <version>${camunda.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Required to use Connectors in unit tests -->
    <!-- https://mvnrepository.com/artifact/org.camunda.connect/camunda-connect-connectors-all -->
    <dependency>
      <groupId>org.camunda.connect</groupId>
      <artifactId>camunda-connect-connectors-all</artifactId>
      <version>1.6.0</version>
      <scope>test</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.camunda.bpm/camunda-engine-plugin-connect -->
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-plugin-connect</artifactId>
      <version>${camunda.version}</version>
      <scope>test</scope>
    </dependency>


    <!-- Required to use Templates in unit tests -->
    <!-- https://mvnrepository.com/artifact/org.camunda.template-engines/camunda-template-engines-freemarker -->
    <dependency>
      <groupId>org.camunda.template-engines</groupId>
      <artifactId>camunda-template-engines-freemarker</artifactId>
      <version>2.2.0</version>
      <scope>test</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.camunda.template-engines/camunda-template-engines-velocity -->
    <dependency>
      <groupId>org.camunda.template-engines</groupId>
      <artifactId>camunda-template-engines-velocity</artifactId>
      <version>2.1.0</version>
    </dependency>

<!--    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.1.0</version>
      <scope>provided</scope>
    </dependency>-->
    <!-- https://mvnrepository.com/artifact/jakarta.servlet/jakarta.servlet-api -->
    <dependency>
      <groupId>jakarta.servlet</groupId>
      <artifactId>jakarta.servlet-api</artifactId>
      <version>6.1.0-M2</version>
      <scope>provided</scope>
    </dependency>

<!--    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>-->
    <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>5.10.2</version>
      <scope>test</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>5.10.2</version>
      <scope>test</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.camunda.bpm.extension/camunda-bpm-junit5 -->
    <dependency>
      <groupId>org.camunda.bpm.extension</groupId>
      <artifactId>camunda-bpm-junit5</artifactId>
      <version>1.1.0</version>
      <scope>test</scope>
    </dependency>

    <!-- Needed for InMemoryH2Test -->
    <!-- https://mvnrepository.com/artifact/com.h2database/h2 -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>2.2.224</version>
      <scope>test</scope>
    </dependency>

    <!-- Used to generate test coverage reports, see https://github.com/camunda/camunda-consulting/tree/master/snippets/camunda-bpm-process-test-coverage -->
    <!-- https://mvnrepository.com/artifact/org.camunda.bpm.extension/camunda-bpm-process-test-coverage-spring-test -->
    <dependency>
      <groupId>org.camunda.bpm.extension</groupId>
      <artifactId>camunda-bpm-process-test-coverage-spring-test</artifactId>
      <version>1.0.3</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.camunda.bpm.extension/camunda-bpm-process-test-coverage-spring-test -->
    <dependency>
      <groupId>org.camunda.bpm.extension</groupId>
      <artifactId>camunda-bpm-process-test-coverage-spring-test</artifactId>
      <version>1.0.3</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.camunda.bpm.extension/camunda-bpm-process-test-coverage-junit5 -->
    <dependency>
      <groupId>org.camunda.bpm.extension</groupId>
      <artifactId>camunda-bpm-process-test-coverage-junit5</artifactId>
      <version>1.0.3</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.camunda.bpm.extension/camunda-bpm-process-test-coverage-core -->
    <dependency>
      <groupId>org.camunda.bpm.extension</groupId>
      <artifactId>camunda-bpm-process-test-coverage-core</artifactId>
      <version>1.0.3</version>
      <scope>test</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.camunda.bpm.extension/camunda-bpm-process-test-coverage-starter -->
    <dependency>
      <groupId>org.camunda.bpm.extension</groupId>
      <artifactId>camunda-bpm-process-test-coverage-starter</artifactId>
      <version>1.0.3</version>
      <scope>test</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.camunda.community.mockito/camunda-platform-7-mockito -->
    <dependency>
      <groupId>org.camunda.community.mockito</groupId>
      <artifactId>camunda-platform-7-mockito</artifactId>
      <version>7.20.0</version>
      <scope>test</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.camunda.community.process_test_coverage/camunda-process-test-coverage-junit5-platform-7 -->
<!--    <dependency>
      <groupId>org.camunda.community.process_test_coverage</groupId>
      <artifactId>camunda-process-test-coverage-junit5-platform-7</artifactId>
      <version>2.4.0</version>
      <scope>test</scope>
    </dependency>-->

    <!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.5.3</version>
      <scope>test</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.slf4j/jcl-over-slf4j -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>2.1.0-alpha1</version>
      <scope>test</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.slf4j/jul-to-slf4j -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
      <version>2.1.0-alpha1</version>
      <scope>test</scope>
    </dependency>


    <!-- used in FileVariableServlet -->
    <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.15.1</version>
    </dependency>

    <!-- Add your own dependencies here, if in compile scope, they are added to the war -->

    <!-- https://mvnrepository.com/artifact/com.camunda.consulting.util/camunda-util-demo-support -->
    <dependency>
      <groupId>com.camunda.consulting.util</groupId>
      <artifactId>camunda-util-demo-support</artifactId>
      <version>0.4.3</version>
    </dependency>

  </dependencies>

  <repositories>
    <repository>
      <id>camunda-bpm-nexus</id>
      <name>Camunda Maven Repository</name>
      <url>https://app.camunda.com/nexus/content/groups/public</url>
    </repository>
    <!-- repository for EE dependencies (requires credentials in ~/.m2/settings.xml) -->
    <repository>
      <id>camunda-bpm-nexus-ee</id>
      <name>Camunda Enterprise Maven Repository</name>
      <url>https://app.camunda.com/nexus/content/repositories/camunda-bpm-ee</url>
    </repository>
    <repository>
      <id>central</id>
      <name>Central Repository</name>
      <url>https://repo1.maven.org/maven2/</url>
    </repository>
  </repositories>

  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <!-- Deploy to Tomcat using: mvn clean package antrun:run
             Follow the instructions in build.properties.example to make it work!-->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <configuration>
          <tasks>
            <ant antfile="${basedir}/build.xml">
              <target name="copy.war.into.tomcat" />
            </ant>
          </tasks>
        </configuration>
      </plugin>
      <!-- Tomcat Maven Plugin

      Deploy to Tomcat using:
      mvn clean tomcat7:deploy

      Redeploy:
      mvn clean tomcat7:redeploy

      Undeploy:
      mvn tomcat7:undeploy

           To use this plugin, add these lines to your tomcat-users.xml: (inside the <tomcat-users>-tag)
           <role rolename="manager-script"/>
           <user username="admin" password="admin" roles="manager-script"/>

       -->
      <!-- https://mvnrepository.com/artifact/org.apache.tomcat.maven/tomcat7-maven-plugin -->
      <plugin>
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <url>http://localhost:8080/manager/text</url>
          <username>admin</username>
          <password>admin</password>
        </configuration>
      </plugin>
      <!-- Deploy to JBoss AS7: mvn clean jboss-as:deploy See also: https://docs.jboss.org/jbossas/7/plugins/maven/latest/examples/deployment-example.html -->
      <!-- https://mvnrepository.com/artifact/org.jboss.as.plugins/jboss-as-maven-plugin -->
      <plugin>
        <groupId>org.jboss.as.plugins</groupId>
        <artifactId>jboss-as-maven-plugin</artifactId>
        <version>7.9.Final</version>
      </plugin>
      <!--      <plugin>
              &lt;!&ndash; Deploy to Wildfly: mvn clean wildfly:deploy See also: https://docs.jboss.org/wildfly/plugins/maven/latest/examples/deployment-example.html &ndash;&gt;
              <groupId>org.wildfly.plugins</groupId>
              <artifactId>wildfly-maven-plugin</artifactId>
              <version>1.2.1.Final</version>
            </plugin>-->
      <!-- https://mvnrepository.com/artifact/org.wildfly.plugins/wildfly-maven-plugin -->
      <plugin>
        <groupId>org.wildfly.plugins</groupId>
        <artifactId>wildfly-maven-plugin</artifactId>
        <version>5.0.0.Beta4</version>
      </plugin>
      <!--
            <plugin>
              <groupId>org.apache.cxf</groupId>
              <artifactId>cxf-codegen-plugin</artifactId>
              <version>${cxf.version}</version>
              <executions>
                <execution>
                  <id>generate-sources</id>
                  <phase>generate-sources</phase>
                  <configuration>
                      <sourceRoot>/home/camunda/workspace/archetypes-DISTRO-RELEASE/target/checkout/camunda-archetype-demo/target/generated/cxf</sourceRoot>
                      <wsdlOptions>
                          <wsdlOption>
                              <wsdl>/home/camunda/workspace/archetypes-DISTRO-RELEASE/target/checkout/camunda-archetype-demo/src/main/resources/wsdl/Antrag_v1_0.wsdl</wsdl>
                          </wsdlOption>
                      </wsdlOptions>
                  </configuration>
                  <goals>
                      <goal>wsdl2java</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
      -->
    </plugins>
  </build>
</project>
